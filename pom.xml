<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.incentergy.openui5</groupId>
	<artifactId>ol</artifactId>
	<version>0.0.9-SNAPSHOT</version>
	<name>OpenUI5 OpenLayers Library</name>
	<description>This project implements an integration between OpenLayers and OpenUI5.</description>
	<url>https://github.com/ManuelB/openui5-ol/</url>
	<properties>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<failOnMissingWebXml>false</failOnMissingWebXml>
	</properties>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>Incentergy GmbH</name>
		<url>http://www.incentergy.de</url>
	</organization>
	<scm>
		<url>https://github.com/ManuelB/openui5-ol</url>
		<connection>scm:git:https://github.com/ManuelB/openui5-ol</connection>
		<tag>HEAD</tag>
	</scm>
	<developers>
		<developer>
			<id>ManuelB</id>
			<name>Manuel Blechschmidt</name>
			<email>manuel.blechschmidt@incentergy.de</email>
		</developer>
	</developers>
	<issueManagement>
		<system>Github</system>
		<url>https://github.com/ManuelB/openui5-ol/issues</url>
	</issueManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>com.github.klieber</groupId>
				<artifactId>phantomjs-maven-plugin</artifactId>
				<version>0.7</version>
				<executions>
					<execution>
						<goals>
							<goal>install</goal>
							<goal>exec</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<version>2.1.1</version>
					<checkSystemPath>false</checkSystemPath>
					<script>${project.basedir}/test/run-qunit.js</script>
					<arguments>
						<argument>${project.basedir}/test/testsuite.qunit.html</argument>
					</arguments>
					<commandLineOptions>--ignore-ssl-errors=true --web-security=false</commandLineOptions>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.0.2</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/classes/META-INF/resources/</outputDirectory>
							<resources>
								<resource>
									<directory>src/</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- https://github.com/allegro/grunt-maven-plugin -->
				<groupId>pl.allegro</groupId>
				<artifactId>grunt-maven-plugin</artifactId>
				<version>1.5.0</version>
				<configuration>
					<!-- relative to src/main/webapp/, default: static -->
					<jsSourceDirectory>../../..</jsSourceDirectory>

					<!-- example options usage to get verbose output in logs -->
					<gruntOptions>
						<gruntOption>--verbose</gruntOption>
					</gruntOptions>

					<!-- example npm install env variable <npmEnvironmentVar> <PHANTOMJS_CDNURL>http://cnpmjs.org/downloads</PHANTOMJS_CDNURL> 
						</npmEnvironmentVar> -->

					<!-- example options usage to filter variables in given resource <filteredResources> 
						<filteredResource>maven-properties.json</filteredResource> </filteredResources> -->

				</configuration>
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<!-- or npm-offline if npm failure is not an option -->
							<!-- <goal>create-resources</goal> <goal>bower</goal> -->
							<goal>npm</goal>
							<goal>grunt</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.8</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<goals>deploy</goals>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
</project>